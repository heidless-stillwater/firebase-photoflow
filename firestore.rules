rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces that only the authenticated user can read or write their own profile data.
     * @path /users/{userId}
     */
    match /users/{userId} {
      allow get: if request.auth.uid == userId;
      allow list: if false;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if request.auth.uid == userId;
    }

    /**
     * @description Enforces that only the owner can read, create, update, or delete their own photos.
     * @path /users/{userId}/photos/{photoId}
     */
    match /users/{userId}/photos/{photoId} {
      allow get: if request.auth.uid == userId;
      allow list: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if request.auth.uid == userId;
    }

    /**
     * @description Allows public read access to tags, but restricts write access.
     * @path /tags/{tagId}
     */
    match /tags/{tagId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }

    /**
     * @description Allows public read access to photo_tags, but restricts write access.
     * @path /photo_tags/{photoTagId}
     */
    match /photo_tags/{photoTagId} {
      allow get: if true;
      allow list: if true;
      allow create: if false;
      allow update: if false;
      allow delete: if false;
    }
  }
}